spring.application.name=duopet-backend

# encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true

## dbms connect
spring.datasource.url=jdbc:oracle:thin:@//13.209.33.76:1521/XEPDB1
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.username=duopet
spring.datasource.password=duopet

# jpa setting
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.id.new_generator_mappings=false
logging.level.org.hibernate.sql=debug
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

# view : jsp setting view resolver
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# fileupload limited file size
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# fileupload save folder
#spring.servlet.multipart.location=D:/upfiles

# log
logging.level.root = info
logging.level.org.hibernate=info

# json serializable error setting
spring.jackson.serialization.fail-on-empty-beans=false
# notice_title, user_id
#spring.jackson.property-naming-strategy=SNAKE_CASE

# file upload and download folder setting
file.upload-dir=C:/upload_files
# sub path : notice, board, photo etc....

# static access folder settings
spring.web.resources.add-mappings=true
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=classpath:/static/

# jwt secritkey : alphabetic, numeric, = (option), +, / 32byte make
# base64 strings
jwt.secret=vrDt6Hhffv9gPPEEHDBVhxY4W+gf//bxDgVljRr/+8z1ZxqEdgTmDDZ/UIquJuWQdZmJ8mz/DuzLF/pmcMFaqw==
# access token 30minute (1800000 : 30min * 60sec * 1000millisec)
jwt.access_expiration=1800000
# refresh token 1day (24h * 60min * 60sec * 1000milisec: 86400000)
jwt.refresh_expiration=84600000

# Public Data API Keys
# Animal Protection Center API
api.animal.protection.service-key=MGb8WPXPe3xTmnO9v+XoQeQclING/0vIvYnowpC3OrRAwjPGJMCTI73sK3qT+T+PwY+qtMjE6sSAu74hQSwqhA==
api.animal.protection.base-url=http://apis.data.go.kr/1543061/animalShelterSrvc_v2/shelterInfo

# Animal Registration API  
api.animal.registration.service-key=MGb8WPXPe3xTmnO9v+XoQeQclING/0vIvYnowpC3OrRAwjPGJMCTI73sK3qT+T+PwY+qtMjE6sSAu74hQSwqhA==
api.animal.registration.base-url=http://apis.data.go.kr/1543061/abandonmentPublicService_v2/abandonmentPublic_v2

# API Common Settings
api.public.timeout=30000
api.public.max-retry=3

# Scheduler Settings
adoption.sync.enabled=true
adoption.sync.cron=0 0 2 * * *

# OAuth2 Kakao Login API Settings
spring.security.oauth2.client.registration.kakao.client-id=bcf62dcd9df7e37bc7d4405676b2896b
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-secret=BLiAAAw4ZVaiIYjrwT1XI0NUEuGn8R0e
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2 Naver Login API settings
spring.security.oauth2.client.registration.naver.client-id=HdMVRyY1C23nQAyL7cXa
spring.security.oauth2.client.registration.naver.client-secret=e1tLuwYT6j
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# OAuth2 Google Login API settings
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# DuoPet AI ?? ??
duopet.ai.api-key=D9jcH0cZyLbC121S265zWCWdJokl8Qv2uyGA6vpQI2Y=
duopet.ai.server-url=http://localhost:8000/api/v1/admin/chatbot/resync


# Public Data API Settings (디코딩된 서비스 키 사용)
# 위의 설정과 중복되어 주석 처리
# api.animal.protection.service-key=MGb8WPXPe3xTmnO9v%2BXoQeQclING%2F0vIvYnowpC3OrRAwjPGJMCTI73sK3qT%2BT%2BPwY%2BqtMjE6sSAu74hQSwqhA%3D%3D
# api.animal.protection.base-url=http://apis.data.go.kr/1543061/abandonmentPublicSrvc/sido
# api.animal.registration.service-key=MGb8WPXPe3xTmnO9v%2BXoQeQclING%2F0vIvYnowpC3OrRAwjPGJMCTI73sK3qT%2BT%2BPwY%2BqtMjE6sSAu74hQSwqhA%3D%3D
# api.animal.registration.base-url=https://apis.data.go.kr/1543061/abandonmentPublicService_v2/abandonmentPublic_v2